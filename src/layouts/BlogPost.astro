---
import type { CollectionEntry } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import FormattedDate from "../components/FormattedDate.astro";
import Tags from "../components/Tags.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage, tags } =
  Astro.props;
---

<html lang='en'>
  <head>
    <BaseHead title={title} description={description} />
    <style lang="postcss">
			main {
				@apply grid place-items-center px-3 lg:px-0;
			}
			article {
				@apply prose prose-hr:my-4 max-w-prose;
				@apply prose-h2:mb-1;
			}
			.hero-image {
				@apply my-3 w-full;
			}
			.hero-image img {
				@apply rounded-xl object-cover w-full max-h-[50vh] object-center;
			}
			.date {
				@apply text-gray-500;
			}
			.title h1 {
				@apply mb-1 text-3xl md:text-4xl font-bold;
			}
      :global(.toc) {
        @apply bg-gray-100 px-3 py-2;
      }
      :global(.toc::before) {
        content: "Table of Contents";
        @apply font-bold;
      }
		</style>
  </head>

  <body>
    <Header />
    <main>
      <article>
        <div class='hero-image'>
          {
            heroImage && (
              <div class='w-full my-auto'>
                <img height={heroImage.height} src={heroImage.src} alt='' />
              </div>
            )
          }
        </div>
        <div class='title'>
          <div class='date'>
            <FormattedDate date={pubDate} />
            {
              updatedDate && (
                <span class='italic'>
                  Last updated on <FormattedDate date={updatedDate} />
                </span>
              )
            }
          </div>
          <h1>{title}</h1>
          <Tags {tags} />
          <hr />
        </div>
        <div class='prose max-w-prose'>
          <slot />
        </div>
      </article>
    </main>
    <Footer />
  </body>
</html>
